{"config":{"lang":["en"],"min_search_lenght":2,"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"NetAM Documentation \u00b6 Welcome to NetAM documentation. Configuration \u00b6 NetAM is designed to use environment variables and/or configuration file. All application configuration is set into config/netam.yml Environment variables \u00b6 Authentication \u00b6 LDAP \u00b6 name environment variable default value description host LDAP_HOST localhost LDAP host port LDAP_PORT 389 LDAP port encryption LDAP_ENCRYPTION false LDAPS encryption base LDAP_BASE dc=example,dc=com LDAP base DN uid LDAP_UID uid LDAP attribute to map username bind_dn LDAP_BIND_USER cn=admin,dc=example.dc=com LDAP user to bind password LDAP_BIND_PASSWORD password LDAP bind password Sentry \u00b6 name environment variable description sentry SENTRY_DSN Sentry full DSN Backup \u00b6 name environment variable default value description path BACKUP_PATH /backups Backup path Otp \u00b6 name environment variable default value description secret OTP_SECRET ch@ngeMech@ngeMech@ngeMech@ngeMe OTP Secret salt Redis \u00b6 name environment variable default value description host REDIS_HOST localhost Redis server port REDIS_PORT 6379 Redis server port db REDIS_DB 0 Redis DB name Database \u00b6 name environment variable default value description pool DB_MAX_THREADS 5 Max connection threads to DB host DB_HOST localhost Database host port DB_PORT 5432 Database post username DB_USER admin Database username password DB_PASS password Database password database DB_NAME netam Database name Puma \u00b6 name environment variable default value description max_thread PUMA_MAX_THREADS 5 Puma max threads min_thread PUMA_MIN_THREADS 1 Puma min threads port PUMA_PORT 3000 Puma listen port Sidekiq \u00b6 name environment variable default value description threads SIDEKIQ_MAX_THREADS 5 Sidekiq threads number concurent jobs SIDEKIQ_PARALLEL 10 Sidekiq max parallels jobs Notifications \u00b6 name environment variable description slack webhook SLACK_WEBHOOK Slack webhook URL Mail \u00b6 environment variable description MAIL_HOST SMTP Host MAIL_POST SMTP Port MAIL_USER SMTP User MAIL_PASS SMTP Password MAIL_AUTH_TYPE SMTP Auth Method MAIL_HELO SMTP HELO MAIL_SSL_ENABLE SMTP SSL enabling MAIL_FROM From field MAIL_TO Receivers Logging \u00b6 name environment variable description enable syslog SYSLOG_ENABLED Enable Syslog appender syslog URL SYSLOG_URL Syslog endpoint enable splunk SPLUNK_ENABLED Enable Splunk appender splunk URL SPLUNK_URL Splunk endpoint splunk TOKEN SPLUNK_TOKEN Splunk token enable elasticsearch ELASTICSEARCH_ENABLED Enable elasticsearch appender elasticsearch URL ELASTICSEARCH_URL elasticsearch endpoint enable logstash LOGSTASH_ENABLED Enable logstash appender logstash HOST LOGSTASH_HOST logstash endpoint logstash PORT LOGSTASH_PORT logstash port","title":"Home"},{"location":"#netam_documentation","text":"Welcome to NetAM documentation.","title":"NetAM Documentation"},{"location":"#configuration","text":"NetAM is designed to use environment variables and/or configuration file. All application configuration is set into config/netam.yml","title":"Configuration"},{"location":"#environment_variables","text":"","title":"Environment variables"},{"location":"#authentication","text":"","title":"Authentication"},{"location":"#ldap","text":"name environment variable default value description host LDAP_HOST localhost LDAP host port LDAP_PORT 389 LDAP port encryption LDAP_ENCRYPTION false LDAPS encryption base LDAP_BASE dc=example,dc=com LDAP base DN uid LDAP_UID uid LDAP attribute to map username bind_dn LDAP_BIND_USER cn=admin,dc=example.dc=com LDAP user to bind password LDAP_BIND_PASSWORD password LDAP bind password","title":"LDAP"},{"location":"#sentry","text":"name environment variable description sentry SENTRY_DSN Sentry full DSN","title":"Sentry"},{"location":"#backup","text":"name environment variable default value description path BACKUP_PATH /backups Backup path","title":"Backup"},{"location":"#otp","text":"name environment variable default value description secret OTP_SECRET ch@ngeMech@ngeMech@ngeMech@ngeMe OTP Secret salt","title":"Otp"},{"location":"#redis","text":"name environment variable default value description host REDIS_HOST localhost Redis server port REDIS_PORT 6379 Redis server port db REDIS_DB 0 Redis DB name","title":"Redis"},{"location":"#database","text":"name environment variable default value description pool DB_MAX_THREADS 5 Max connection threads to DB host DB_HOST localhost Database host port DB_PORT 5432 Database post username DB_USER admin Database username password DB_PASS password Database password database DB_NAME netam Database name","title":"Database"},{"location":"#puma","text":"name environment variable default value description max_thread PUMA_MAX_THREADS 5 Puma max threads min_thread PUMA_MIN_THREADS 1 Puma min threads port PUMA_PORT 3000 Puma listen port","title":"Puma"},{"location":"#sidekiq","text":"name environment variable default value description threads SIDEKIQ_MAX_THREADS 5 Sidekiq threads number concurent jobs SIDEKIQ_PARALLEL 10 Sidekiq max parallels jobs","title":"Sidekiq"},{"location":"#notifications","text":"name environment variable description slack webhook SLACK_WEBHOOK Slack webhook URL","title":"Notifications"},{"location":"#mail","text":"environment variable description MAIL_HOST SMTP Host MAIL_POST SMTP Port MAIL_USER SMTP User MAIL_PASS SMTP Password MAIL_AUTH_TYPE SMTP Auth Method MAIL_HELO SMTP HELO MAIL_SSL_ENABLE SMTP SSL enabling MAIL_FROM From field MAIL_TO Receivers","title":"Mail"},{"location":"#logging","text":"name environment variable description enable syslog SYSLOG_ENABLED Enable Syslog appender syslog URL SYSLOG_URL Syslog endpoint enable splunk SPLUNK_ENABLED Enable Splunk appender splunk URL SPLUNK_URL Splunk endpoint splunk TOKEN SPLUNK_TOKEN Splunk token enable elasticsearch ELASTICSEARCH_ENABLED Enable elasticsearch appender elasticsearch URL ELASTICSEARCH_URL elasticsearch endpoint enable logstash LOGSTASH_ENABLED Enable logstash appender logstash HOST LOGSTASH_HOST logstash endpoint logstash PORT LOGSTASH_PORT logstash port","title":"Logging"},{"location":"license/","text":"BSD 3-Clause License Copyright (c) 2020, S\u00e9bastien DEU and Vincent FRICOU All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \u201cAS IS\u201d AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"dev/","text":"Development version \u00b6 Administration \u00b6 Administration guide is located here Usage \u00b6 Usage guide is located here API \u00b6 API documentation is located here Architecture \u00b6 The software architecture documentation is location here","title":"dev"},{"location":"dev/#development_version","text":"","title":"Development version"},{"location":"dev/#administration","text":"Administration guide is located here","title":"Administration"},{"location":"dev/#usage","text":"Usage guide is located here","title":"Usage"},{"location":"dev/#api","text":"API documentation is located here","title":"API"},{"location":"dev/#architecture","text":"The software architecture documentation is location here","title":"Architecture"},{"location":"dev/admin/","text":"Admin guide \u00b6","title":"Admin guide"},{"location":"dev/admin/#admin_guide","text":"","title":"Admin guide"},{"location":"dev/api/","text":"API documentation \u00b6 All API except token generation are automatically documented directly inside application throught swagger. Internal documentation is accessible throught the url http://<netam_host>/docs when you\u2019re logged in. Get token \u00b6 NetAM use oauth mechanism to provide tokens. To request token, you must send POST request to endpoint http://<netam_host>/oauth/token and fill form datas : username : <mail_address> password : <associated_password> grant_type : password Token validity are limited to one day next to generation. The token must be declared in each API request into headers with format 'Authorization: Bearer <getted_token>' Request answer \u00b6 This request give you an answer like: { \"access_token\": \"zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o\", \"token_type\": \"Bearer\", \"expires_in\": 430010, \"created_at\": 1597607513 } Example \u00b6 curl --location \\ -XPOST 'http://localhost:3000/oauth/token' \\ --form 'username=toto@me.com' \\ --form 'password=azazazazazaz' \\ --form 'grant_type=password' Sections \u00b6 Get Sections list \u00b6 You could retrieve a list of all sections you was granted in software. Type Value Method GET URL http://<netam_server>/api/v1/sections Request answer \u00b6 [ { \"id\": 2, \"name\": \"example_v6\", \"description\": \"This section is designed for example with IPv6\", \"network\": \"::/124\", \"schedule\": \"\" }, { \"id\": 1, \"name\": \"example_v4\", \"description\": \"This section is designed for example with IPv4\", \"network\": \"127.0.0.0/24\", \"schedule\": \"\" } ] Example \u00b6 curl --location \\ -XGET 'http://<netam_host>/api/v1/sections' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' Create Sections \u00b6 You could create sections through API if account as required ability. Type Value Method POST URL http://<netam_server>/api/v1/sections Request answer \u00b6 { \"id\": 3, \"name\": \"example_api\", \"description\": null, \"network\": \"127.0.0.0/25\", \"schedule\": \"\" } Example \u00b6 curl --location \\ -XGET 'http://<netam_host>/api/v1/sections' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' \\ -d '{ \"id\": 3, \"name\": \"example_api\", \"description\": null, \"network\": \"127.0.0.0/25\", \"schedule\": \"\" }' Get Section details \u00b6 You could retrieve details of specific section. Type Value Method GET URL http://<netam_server>/api/v1/sections/<section_id> Request answer \u00b6 [ { \"id\": 1, \"name\": \"example_v4\", \"description\": \"This section is designed for example with IPv4\", \"network\": \"127.0.0.0/24\", \"schedule\": \"\" } ] Example \u00b6 curl --location \\ -XGET 'http://<netam_host>/api/v1/sections/1' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' Launch section scan \u00b6 You could launch section scan. Type Value Method POST URL http://<netam_server>/api/v1/sections/<section_id>/scan Request answer \u00b6 { \"status\": \"ack\" } Example \u00b6 curl --location \\ -XPOST 'http://<netam_host>/api/v1/sections/1/scan' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' Export section usage \u00b6 You could perform section csv export. Type Value Method GET URL http://<netam_server>/api/v1/sections/<section_id>/export Request answer \u00b6 ID,Section,Address,FQDN,Description,State 1,example_v4,127.0.0.1,,,Active 1,example_v4,127.0.0.2,,,Active 1,example_v4,127.0.0.3,,,Active Example \u00b6 curl --location \\ -XGET 'http://<netam_host>/api/v1/sections/1/export' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' Get section usage \u00b6 You could get section usage. Type Value Method GET URL http://<netam_server>/api/v1/sections/<section_id>/usages Request answer \u00b6 [ { \"id\": 14, \"ip_used\": \"127.0.0.1\", \"fqdn\": null, \"description\": null, \"state\": \"actived\" }, { \"id\": 15, \"ip_used\": \"127.0.0.2\", \"fqdn\": null, \"description\": null, \"state\": \"actived\" }, ... ] Example \u00b6 curl --location \\ -XGET 'http://<netam_host>/api/v1/sections/1/usages' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' Create section usage \u00b6 You could create section usage. Type Value Method POST URL http://<netam_server>/api/v1/sections/<section_id>/usages Request answer \u00b6 { \"id\": 274, \"ip_used\": \"127.0.0.1\", \"fqdn\": \"\", \"description\": null, \"state\": \"actived\" } Example \u00b6 curl --location \\ -XPOST 'http://<netam_host>/api/v1/sections/1/usages' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' \\ -d '{ \"ip_used\": \"127.0.0.1\", \"fqdn\": \"\", \"state\": \"activated\" }' Request IP in section \u00b6 You could create section usage. Type Value Method POST URL http://<netam_server>/api/v1/sections/<section_id>/request_ip Request answer \u00b6 { \"id\": 274, \"ip_used\": \"127.0.0.2\", \"fqdn\": null, \"description\": null, \"state\": \"actived\" } Example \u00b6 curl --location \\ -XPOST 'http://<netam_host>/api/v1/sections/1/request_ip' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' VLAN \u00b6 Get VLANs list \u00b6 You could retrieve a list of all vlans you was granted in software. Type Value Method GET URL http://<netam_server>/api/v1/vlans Request answer \u00b6 [ { \"id\": 1, \"vid\": 1, \"name\": \"default\", \"description\": \"Default Vlan.\" } ] Example \u00b6 curl --location \\ -XGET 'http://<netam_host>/api/v1/vlans' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' Get VLANs details \u00b6 You could retrieve a list of all vlans you was granted in software. Type Value Method GET URL http://<netam_server>/api/v1/vlans/1 Request answer \u00b6 { \"id\": 1, \"vid\": 1, \"name\": \"default\", \"description\": \"Default Vlan.\" } Example \u00b6 curl --location \\ -XGET 'http://<netam_host>/api/v1/vlans/1' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' Create VLAN \u00b6 You could create sections through API if account as required ability. Type Value Method POST URL http://<netam_server>/api/v1/vlans Request answer \u00b6 { \"id\": 2, \"vid\": 3, \"name\": \"example_api\", \"description\": null } Example \u00b6 curl --location \\ -XGET 'http://<netam_host>/api/v1/vlans' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' \\ -d '{ \"vid\": 3, \"name\": \"example_vlan\", \"description\": null }' Backups \u00b6 List Backup \u00b6 You could list backups through API if account as required ability Type Value Method GET URL http://<netam_server>/api/v1/backups Request answer \u00b6 { \"backups\": [ \"1604758813_2020_11_07_1.5.0-pre.sql.gz\", \"1604758815_2020_11_07_1.5.0-pre.sql.gz\" ] } Example \u00b6 curl --location \\ -XGET 'http://<netam_host>/api/v1/backups' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' \\ Create Backup \u00b6 You could create backups through API if account as required ability Type Value Method POST URL http://<netam_server>/api/v1/backups Request answer \u00b6 \"7169176bc7e2fddf121264bd\" Example \u00b6 curl --location \\ -XPOST 'http://<netam_host>/api/v1/backups' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' \\","title":"API documentation"},{"location":"dev/api/#api_documentation","text":"All API except token generation are automatically documented directly inside application throught swagger. Internal documentation is accessible throught the url http://<netam_host>/docs when you\u2019re logged in.","title":"API documentation"},{"location":"dev/api/#get_token","text":"NetAM use oauth mechanism to provide tokens. To request token, you must send POST request to endpoint http://<netam_host>/oauth/token and fill form datas : username : <mail_address> password : <associated_password> grant_type : password Token validity are limited to one day next to generation. The token must be declared in each API request into headers with format 'Authorization: Bearer <getted_token>'","title":"Get token"},{"location":"dev/api/#request_answer","text":"This request give you an answer like: { \"access_token\": \"zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o\", \"token_type\": \"Bearer\", \"expires_in\": 430010, \"created_at\": 1597607513 }","title":"Request answer"},{"location":"dev/api/#example","text":"curl --location \\ -XPOST 'http://localhost:3000/oauth/token' \\ --form 'username=toto@me.com' \\ --form 'password=azazazazazaz' \\ --form 'grant_type=password'","title":"Example"},{"location":"dev/api/#sections","text":"","title":"Sections"},{"location":"dev/api/#get_sections_list","text":"You could retrieve a list of all sections you was granted in software. Type Value Method GET URL http://<netam_server>/api/v1/sections","title":"Get Sections list"},{"location":"dev/api/#request_answer_1","text":"[ { \"id\": 2, \"name\": \"example_v6\", \"description\": \"This section is designed for example with IPv6\", \"network\": \"::/124\", \"schedule\": \"\" }, { \"id\": 1, \"name\": \"example_v4\", \"description\": \"This section is designed for example with IPv4\", \"network\": \"127.0.0.0/24\", \"schedule\": \"\" } ]","title":"Request answer"},{"location":"dev/api/#example_1","text":"curl --location \\ -XGET 'http://<netam_host>/api/v1/sections' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o'","title":"Example"},{"location":"dev/api/#create_sections","text":"You could create sections through API if account as required ability. Type Value Method POST URL http://<netam_server>/api/v1/sections","title":"Create Sections"},{"location":"dev/api/#request_answer_2","text":"{ \"id\": 3, \"name\": \"example_api\", \"description\": null, \"network\": \"127.0.0.0/25\", \"schedule\": \"\" }","title":"Request answer"},{"location":"dev/api/#example_2","text":"curl --location \\ -XGET 'http://<netam_host>/api/v1/sections' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' \\ -d '{ \"id\": 3, \"name\": \"example_api\", \"description\": null, \"network\": \"127.0.0.0/25\", \"schedule\": \"\" }'","title":"Example"},{"location":"dev/api/#get_section_details","text":"You could retrieve details of specific section. Type Value Method GET URL http://<netam_server>/api/v1/sections/<section_id>","title":"Get Section details"},{"location":"dev/api/#request_answer_3","text":"[ { \"id\": 1, \"name\": \"example_v4\", \"description\": \"This section is designed for example with IPv4\", \"network\": \"127.0.0.0/24\", \"schedule\": \"\" } ]","title":"Request answer"},{"location":"dev/api/#example_3","text":"curl --location \\ -XGET 'http://<netam_host>/api/v1/sections/1' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o'","title":"Example"},{"location":"dev/api/#launch_section_scan","text":"You could launch section scan. Type Value Method POST URL http://<netam_server>/api/v1/sections/<section_id>/scan","title":"Launch section scan"},{"location":"dev/api/#request_answer_4","text":"{ \"status\": \"ack\" }","title":"Request answer"},{"location":"dev/api/#example_4","text":"curl --location \\ -XPOST 'http://<netam_host>/api/v1/sections/1/scan' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o'","title":"Example"},{"location":"dev/api/#export_section_usage","text":"You could perform section csv export. Type Value Method GET URL http://<netam_server>/api/v1/sections/<section_id>/export","title":"Export section usage"},{"location":"dev/api/#request_answer_5","text":"ID,Section,Address,FQDN,Description,State 1,example_v4,127.0.0.1,,,Active 1,example_v4,127.0.0.2,,,Active 1,example_v4,127.0.0.3,,,Active","title":"Request answer"},{"location":"dev/api/#example_5","text":"curl --location \\ -XGET 'http://<netam_host>/api/v1/sections/1/export' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o'","title":"Example"},{"location":"dev/api/#get_section_usage","text":"You could get section usage. Type Value Method GET URL http://<netam_server>/api/v1/sections/<section_id>/usages","title":"Get section usage"},{"location":"dev/api/#request_answer_6","text":"[ { \"id\": 14, \"ip_used\": \"127.0.0.1\", \"fqdn\": null, \"description\": null, \"state\": \"actived\" }, { \"id\": 15, \"ip_used\": \"127.0.0.2\", \"fqdn\": null, \"description\": null, \"state\": \"actived\" }, ... ]","title":"Request answer"},{"location":"dev/api/#example_6","text":"curl --location \\ -XGET 'http://<netam_host>/api/v1/sections/1/usages' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o'","title":"Example"},{"location":"dev/api/#create_section_usage","text":"You could create section usage. Type Value Method POST URL http://<netam_server>/api/v1/sections/<section_id>/usages","title":"Create section usage"},{"location":"dev/api/#request_answer_7","text":"{ \"id\": 274, \"ip_used\": \"127.0.0.1\", \"fqdn\": \"\", \"description\": null, \"state\": \"actived\" }","title":"Request answer"},{"location":"dev/api/#example_7","text":"curl --location \\ -XPOST 'http://<netam_host>/api/v1/sections/1/usages' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' \\ -d '{ \"ip_used\": \"127.0.0.1\", \"fqdn\": \"\", \"state\": \"activated\" }'","title":"Example"},{"location":"dev/api/#request_ip_in_section","text":"You could create section usage. Type Value Method POST URL http://<netam_server>/api/v1/sections/<section_id>/request_ip","title":"Request IP in section"},{"location":"dev/api/#request_answer_8","text":"{ \"id\": 274, \"ip_used\": \"127.0.0.2\", \"fqdn\": null, \"description\": null, \"state\": \"actived\" }","title":"Request answer"},{"location":"dev/api/#example_8","text":"curl --location \\ -XPOST 'http://<netam_host>/api/v1/sections/1/request_ip' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o'","title":"Example"},{"location":"dev/api/#vlan","text":"","title":"VLAN"},{"location":"dev/api/#get_vlans_list","text":"You could retrieve a list of all vlans you was granted in software. Type Value Method GET URL http://<netam_server>/api/v1/vlans","title":"Get VLANs list"},{"location":"dev/api/#request_answer_9","text":"[ { \"id\": 1, \"vid\": 1, \"name\": \"default\", \"description\": \"Default Vlan.\" } ]","title":"Request answer"},{"location":"dev/api/#example_9","text":"curl --location \\ -XGET 'http://<netam_host>/api/v1/vlans' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o'","title":"Example"},{"location":"dev/api/#get_vlans_details","text":"You could retrieve a list of all vlans you was granted in software. Type Value Method GET URL http://<netam_server>/api/v1/vlans/1","title":"Get VLANs details"},{"location":"dev/api/#request_answer_10","text":"{ \"id\": 1, \"vid\": 1, \"name\": \"default\", \"description\": \"Default Vlan.\" }","title":"Request answer"},{"location":"dev/api/#example_10","text":"curl --location \\ -XGET 'http://<netam_host>/api/v1/vlans/1' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o'","title":"Example"},{"location":"dev/api/#create_vlan","text":"You could create sections through API if account as required ability. Type Value Method POST URL http://<netam_server>/api/v1/vlans","title":"Create VLAN"},{"location":"dev/api/#request_answer_11","text":"{ \"id\": 2, \"vid\": 3, \"name\": \"example_api\", \"description\": null }","title":"Request answer"},{"location":"dev/api/#example_11","text":"curl --location \\ -XGET 'http://<netam_host>/api/v1/vlans' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' \\ -d '{ \"vid\": 3, \"name\": \"example_vlan\", \"description\": null }'","title":"Example"},{"location":"dev/api/#backups","text":"","title":"Backups"},{"location":"dev/api/#list_backup","text":"You could list backups through API if account as required ability Type Value Method GET URL http://<netam_server>/api/v1/backups","title":"List Backup"},{"location":"dev/api/#request_answer_12","text":"{ \"backups\": [ \"1604758813_2020_11_07_1.5.0-pre.sql.gz\", \"1604758815_2020_11_07_1.5.0-pre.sql.gz\" ] }","title":"Request answer"},{"location":"dev/api/#example_12","text":"curl --location \\ -XGET 'http://<netam_host>/api/v1/backups' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' \\","title":"Example"},{"location":"dev/api/#create_backup","text":"You could create backups through API if account as required ability Type Value Method POST URL http://<netam_server>/api/v1/backups","title":"Create Backup"},{"location":"dev/api/#request_answer_13","text":"\"7169176bc7e2fddf121264bd\"","title":"Request answer"},{"location":"dev/api/#example_13","text":"curl --location \\ -XPOST 'http://<netam_host>/api/v1/backups' \\ --header 'Authorization: Bearer zmL0UxPjqJhfzSXDcbjJp7Hs6wr6JF6SnHp1ybxBH_o' \\","title":"Example"},{"location":"dev/architecture/","text":"Architecture documentation \u00b6 Actual NetAM architecture is similar to monolithic pattern. We have two services (control node and worker node) around two databases (Redis and PostgreSQL). For the moment these two services contacts the twice databases. in the future, only control node will use databases. All workers nodes will be use API to send data. Nodes \u00b6 Control node \u00b6 The control node is a Ruby on Rails webservice with puma HTTP server. To ensure security, this service use devise gem . This service use PostgreSQL database to store all information about sections, vlans and usages. The communication between worker node and this control node is made via Redis database. Worker node \u00b6 This node use Sidekiq system to background run jobs. Sidekiq process scans of network. These configurations was stored by control node in Redis database, and used by Sidekiq. At the end of the scan Sidekiq sends all datas to PostgreSQL database. Databases \u00b6 PostgreSQL \u00b6 PostgreSQL database was used to store permanently all datas of NetAM. We use it to store and link section, vlan and usages. In addition, PostgreSQL was also used to store permissions and users information. Redis \u00b6 In NetAM use Redis database only for Sidekiq usage. This database give to sidekiq an ability to retry, order and queue jobs.","title":"Architecture documentation"},{"location":"dev/architecture/#architecture_documentation","text":"Actual NetAM architecture is similar to monolithic pattern. We have two services (control node and worker node) around two databases (Redis and PostgreSQL). For the moment these two services contacts the twice databases. in the future, only control node will use databases. All workers nodes will be use API to send data.","title":"Architecture documentation"},{"location":"dev/architecture/#nodes","text":"","title":"Nodes"},{"location":"dev/architecture/#control_node","text":"The control node is a Ruby on Rails webservice with puma HTTP server. To ensure security, this service use devise gem . This service use PostgreSQL database to store all information about sections, vlans and usages. The communication between worker node and this control node is made via Redis database.","title":"Control node"},{"location":"dev/architecture/#worker_node","text":"This node use Sidekiq system to background run jobs. Sidekiq process scans of network. These configurations was stored by control node in Redis database, and used by Sidekiq. At the end of the scan Sidekiq sends all datas to PostgreSQL database.","title":"Worker node"},{"location":"dev/architecture/#databases","text":"","title":"Databases"},{"location":"dev/architecture/#postgresql","text":"PostgreSQL database was used to store permanently all datas of NetAM. We use it to store and link section, vlan and usages. In addition, PostgreSQL was also used to store permissions and users information.","title":"PostgreSQL"},{"location":"dev/architecture/#redis","text":"In NetAM use Redis database only for Sidekiq usage. This database give to sidekiq an ability to retry, order and queue jobs.","title":"Redis"},{"location":"dev/usage/","text":"Usage guide \u00b6","title":"Usage guide"},{"location":"dev/usage/#usage_guide","text":"","title":"Usage guide"}]}